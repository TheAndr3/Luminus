// components/ActionSidebar.tsx
import React from 'react';

interface ActionSidebarProps {
  /** Controla a visibilidade da sidebar. */
  isVisible: boolean;

  /** Chamado ao clicar no bot√£o "Adicionar Item". */
  onAddItemToSection: () => void;
  /** Chamado ao clicar no bot√£o "Duplicar Se√ß√£o". */
  onAddNewSection: () => void;
  /** Chamado ao clicar no bot√£o "Configura√ß√µes da Se√ß√£o". */
  onSectionSettings: () => void;
  /** Chamado ao clicar no bot√£o "Excluir Se√ß√£o". */
  onDeleteSection: () => void;

  /** Indica se um item est√° selecionado e pode ser exclu√≠do. Habilita/desabilita o bot√£o "Excluir Item". */
  canDeleteItem: boolean;
  /** Chamado ao clicar no bot√£o "Excluir Item Selecionado". Deve ser definido se canDeleteItem pode ser true. */
  onDeleteItemFromSection?: () => void; // Opcional, mas necess√°rio se canDeleteItem for true

  /** Classe CSS para o container principal da sidebar. */
  className?: string;
  /** Classe CSS base para todos os bot√µes na sidebar. */
  buttonClassName?: string;
  /** Classe CSS espec√≠fica para o bot√£o "Adicionar Item". */
  addItemButtonClassName?: string;
  /** Classe CSS espec√≠fica para o bot√£o "Duplicar Se√ß√£o". */
  duplicateSectionButtonClassName?: string;
  /** Classe CSS espec√≠fica para o bot√£o "Configura√ß√µes da Se√ß√£o". */
  sectionSettingsButtonClassName?: string;
  /** Classe CSS espec√≠fica para o bot√£o "Excluir Item". */
  deleteItemButtonClassName?: string;
  /** Classe CSS espec√≠fica para o bot√£o "Excluir Se√ß√£o". */
  deleteSectionButtonClassName?: string;
  /** Classe CSS para bot√µes desabilitados. */
  disabledButtonClassName?: string;
}

const ActionSidebar: React.FC<ActionSidebarProps> = ({
  isVisible,
  onAddItemToSection,
  onAddNewSection,
  onSectionSettings,
  onDeleteSection,
  canDeleteItem,
  onDeleteItemFromSection,
  className = '',
  buttonClassName = '',
  addItemButtonClassName = '',
  duplicateSectionButtonClassName = '',
  sectionSettingsButtonClassName = '',
  deleteItemButtonClassName = '',
  deleteSectionButtonClassName = '',
  disabledButtonClassName = '',
}) => {
  if (!isVisible) {
    return null;
  }

  const getButtonClasses = (specificClass: string) => {
    return `${buttonClassName} ${specificClass}`.trim();
  };

  const getDeleteItemButtonClasses = () => {
    let classes = `${buttonClassName} ${deleteItemButtonClassName}`;
    if (!canDeleteItem) {
      classes += ` ${disabledButtonClassName}`;
    }
    return classes.trim();
  };

  return (
    <aside className={className}>
      {/* 1. Adicionar novo SectionItem */}
      <button
        type="button"
        onClick={onAddItemToSection}
        className={getButtonClasses(addItemButtonClassName)}
        aria-label="Adicionar item √† se√ß√£o"
      >
        {/* Substitua por √≠cone se desejar, ex: <PlusIcon /> ou seu IconButton */}
        + Item
      </button>

      {/* 2. Duplicar (ou "Adicionar nova") Section */}
      {/* A prop √© onAddNewSection, ent√£o o bot√£o far√° isso. */}
      <button
        type="button"
        onClick={onAddNewSection}
        className={getButtonClasses(duplicateSectionButtonClassName)}
        aria-label="Duplicar se√ß√£o"
      >
        {/* Substitua por √≠cone, ex: <CopyIcon /> */}
        Copiar Se√ß√£o
      </button>

      {/* 3. Configurar os conceitos da Section */}
      <button
        type="button"
        onClick={onSectionSettings}
        className={getButtonClasses(sectionSettingsButtonClassName)}
        aria-label="Configura√ß√µes da se√ß√£o"
      >
        {/* Substitua por √≠cone, ex: <SettingsIcon /> */}
        ‚öôÔ∏è Config.
      </button>

      {/* 4. Excluir SectionItem que est√° focado */}
      <button
        type="button"
        onClick={() => {
          if (canDeleteItem && onDeleteItemFromSection) {
            onDeleteItemFromSection();
          }
        }}
        disabled={!canDeleteItem}
        className={getDeleteItemButtonClasses()}
        aria-label="Excluir item selecionado"
      >
        {/* Substitua por √≠cone, ex: <TrashIcon /> ou <MinusIcon /> */}
        - Item
      </button>

      {/* 5. Excluir toda a Section */}
      <button
        type="button"
        onClick={onDeleteSection}
        className={getButtonClasses(deleteSectionButtonClassName)}
        aria-label="Excluir se√ß√£o inteira"
      >
        {/* Substitua por √≠cone, ex: <TrashIcon /> */}
        üóëÔ∏è Se√ß√£o
      </button>
    </aside>
  );
};

export default ActionSidebar;